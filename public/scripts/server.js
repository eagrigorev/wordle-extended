"use strict";
/* eslint @typescript-eslint/no-var-requires: "off" */
const axios = require('axios').default;
const express = require('express');
const app = express();
const PORT = 8000;
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});
app.get('/words', (req, res) => {
    const options = {
        method: 'GET',
        url: 'https://random-words5.p.rapidapi.com/getMultipleRandom',
        params: { count: '5', wordLength: '6' },
        headers: {
            'x-rapidapi-host': 'random-words5.p.rapidapi.com',
            'x-rapidapi-key': '1cbe8f940amsh1b76597c778220ap105fb0jsn9f6628004f11'
        }
    };
    axios.request(options)
        .then((response) => {
        console.log(response.data);
    })
        .catch((error) => {
        console.error(error);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NlcnZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0RBQXNEO0FBRXRELE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUE7QUFDdEMsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFBO0FBQ2xDLE1BQU0sR0FBRyxHQUFHLE9BQU8sRUFBRSxDQUFBO0FBQ3JCLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQTtBQUVqQixHQUFHLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUU7SUFDcEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyw2QkFBNkIsSUFBSSxFQUFFLENBQUMsQ0FBQTtBQUNsRCxDQUFDLENBQUMsQ0FBQTtBQUVGLEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUMsR0FBb0IsRUFBRSxHQUFxQixFQUFFLEVBQUU7SUFDaEUsTUFBTSxPQUFPLEdBQUc7UUFDZCxNQUFNLEVBQUUsS0FBSztRQUNiLEdBQUcsRUFBRSx3REFBd0Q7UUFDN0QsTUFBTSxFQUFFLEVBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxVQUFVLEVBQUUsR0FBRyxFQUFDO1FBQ3JDLE9BQU8sRUFBRTtZQUNQLGlCQUFpQixFQUFFLDhCQUE4QjtZQUNqRCxnQkFBZ0IsRUFBRSxvREFBb0Q7U0FDdkU7S0FDRixDQUFDO0lBRUYsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7U0FDbkIsSUFBSSxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUU7UUFDakIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDNUIsQ0FBQyxDQUFDO1NBQ0QsS0FBSyxDQUFDLENBQUMsS0FBYSxFQUFFLEVBQUU7UUFDdkIsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUN0QixDQUFDLENBQUMsQ0FBQTtBQUNOLENBQUMsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IEB0eXBlc2NyaXB0LWVzbGludC9uby12YXItcmVxdWlyZXM6IFwib2ZmXCIgKi9cclxuXHJcbmNvbnN0IGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKS5kZWZhdWx0XHJcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcclxuY29uc3QgYXBwID0gZXhwcmVzcygpXHJcbmNvbnN0IFBPUlQgPSA4MDAwXHJcblxyXG5hcHAubGlzdGVuKFBPUlQsICgpID0+IHtcclxuICBjb25zb2xlLmxvZyhgU2VydmVyIGlzIHJ1bm5pbmcgb24gcG9ydCAke1BPUlR9YClcclxufSlcclxuXHJcbmFwcC5nZXQoJy93b3JkcycsIChyZXE6IEV4cHJlc3MuUmVxdWVzdCwgcmVzOiBFeHByZXNzLlJlc3BvbnNlKSA9PiB7XHJcbiAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgIG1ldGhvZDogJ0dFVCcsXHJcbiAgICB1cmw6ICdodHRwczovL3JhbmRvbS13b3JkczUucC5yYXBpZGFwaS5jb20vZ2V0TXVsdGlwbGVSYW5kb20nLFxyXG4gICAgcGFyYW1zOiB7Y291bnQ6ICc1Jywgd29yZExlbmd0aDogJzYnfSxcclxuICAgIGhlYWRlcnM6IHtcclxuICAgICAgJ3gtcmFwaWRhcGktaG9zdCc6ICdyYW5kb20td29yZHM1LnAucmFwaWRhcGkuY29tJyxcclxuICAgICAgJ3gtcmFwaWRhcGkta2V5JzogJzFjYmU4Zjk0MGFtc2gxYjc2NTk3Yzc3ODIyMGFwMTA1ZmIwanNuOWY2NjI4MDA0ZjExJ1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIGF4aW9zLnJlcXVlc3Qob3B0aW9ucylcclxuICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKVxyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyb3I6IHN0cmluZykgPT4ge1xyXG4gICAgICBjb25zb2xlLmVycm9yKGVycm9yKVxyXG4gICAgfSlcclxufSlcclxuIl19