"use strict";
/* eslint @typescript-eslint/no-var-requires: "off" */
const axios = require('axios').default;
const express = require('express');
const cors = require('cors');
const app = express();
app.use(cors());
const PORT = 8000;
require('dotenv').config();
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});
app.get('/words', (req, res) => {
    const options = {
        method: 'GET',
        url: 'https://random-words5.p.rapidapi.com/getMultipleRandom',
        params: { count: '5', wordLength: '6' },
        headers: {
            'x-rapidapi-host': 'random-words5.p.rapidapi.com',
            'x-rapidapi-key': process.env.RAPID_API_KEY
        }
    };
    axios.request(options)
        .then((response) => {
        console.log(response.data);
        res.json(response.data[0]);
    })
        .catch((error) => {
        console.error(error);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NlcnZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0RBQXNEO0FBRXRELE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUM7QUFDdkMsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ25DLE1BQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUM3QixNQUFNLEdBQUcsR0FBRyxPQUFPLEVBQUUsQ0FBQztBQUN0QixHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7QUFDaEIsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDO0FBQ2xCLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUUzQixHQUFHLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxHQUFTLEVBQUU7SUFDMUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyw2QkFBNkIsSUFBSSxFQUFFLENBQUMsQ0FBQztBQUNuRCxDQUFDLENBQUMsQ0FBQztBQUVILEdBQUcsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUMsR0FBb0IsRUFBRSxHQUFxQixFQUFFLEVBQUU7SUFDaEUsTUFBTSxPQUFPLEdBQUc7UUFDZCxNQUFNLEVBQUUsS0FBSztRQUNiLEdBQUcsRUFBRSx3REFBd0Q7UUFDN0QsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxVQUFVLEVBQUUsR0FBRyxFQUFFO1FBQ3ZDLE9BQU8sRUFBRTtZQUNQLGlCQUFpQixFQUFFLDhCQUE4QjtZQUNqRCxnQkFBZ0IsRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWE7U0FDNUM7S0FDRixDQUFDO0lBQ0YsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7U0FDbkIsSUFBSSxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUU7UUFDakIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDM0IsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDN0IsQ0FBQyxDQUFDO1NBQ0QsS0FBSyxDQUFDLENBQUMsS0FBYSxFQUFFLEVBQUU7UUFDdkIsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN2QixDQUFDLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IEB0eXBlc2NyaXB0LWVzbGludC9uby12YXItcmVxdWlyZXM6IFwib2ZmXCIgKi9cclxuXHJcbmNvbnN0IGF4aW9zID0gcmVxdWlyZSgnYXhpb3MnKS5kZWZhdWx0O1xyXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcbmFwcC51c2UoY29ycygpKTtcclxuY29uc3QgUE9SVCA9IDgwMDA7XHJcbnJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpO1xyXG5cclxuYXBwLmxpc3RlbihQT1JULCAoKTogdm9pZCA9PiB7XHJcbiAgY29uc29sZS5sb2coYFNlcnZlciBpcyBydW5uaW5nIG9uIHBvcnQgJHtQT1JUfWApO1xyXG59KTtcclxuXHJcbmFwcC5nZXQoJy93b3JkcycsIChyZXE6IEV4cHJlc3MuUmVxdWVzdCwgcmVzOiBFeHByZXNzLlJlc3BvbnNlKSA9PiB7XHJcbiAgY29uc3Qgb3B0aW9ucyA9IHtcclxuICAgIG1ldGhvZDogJ0dFVCcsXHJcbiAgICB1cmw6ICdodHRwczovL3JhbmRvbS13b3JkczUucC5yYXBpZGFwaS5jb20vZ2V0TXVsdGlwbGVSYW5kb20nLFxyXG4gICAgcGFyYW1zOiB7IGNvdW50OiAnNScsIHdvcmRMZW5ndGg6ICc2JyB9LFxyXG4gICAgaGVhZGVyczoge1xyXG4gICAgICAneC1yYXBpZGFwaS1ob3N0JzogJ3JhbmRvbS13b3JkczUucC5yYXBpZGFwaS5jb20nLFxyXG4gICAgICAneC1yYXBpZGFwaS1rZXknOiBwcm9jZXNzLmVudi5SQVBJRF9BUElfS0VZXHJcbiAgICB9XHJcbiAgfTtcclxuICBheGlvcy5yZXF1ZXN0KG9wdGlvbnMpXHJcbiAgICAudGhlbigocmVzcG9uc2UpID0+IHtcclxuICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7XHJcbiAgICAgIHJlcy5qc29uKHJlc3BvbnNlLmRhdGFbMF0pO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyb3I6IHN0cmluZykgPT4ge1xyXG4gICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcclxuICAgIH0pO1xyXG59KTtcclxuIl19